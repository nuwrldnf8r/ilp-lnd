{"version":3,"file":"error-handler.js","sourceRoot":"","sources":["error-handler.ts"],"names":[],"mappings":";;AAAA,uCAAsD;AAEtD,wCAAuC;AAEvC;IAGE,YAAa,IAAQ,EAAE,GAAuB;QAC5C,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC,aAAa,CAAA;IACxC,CAAC;IAED,KAAK,CAAC,gBAAgB,CAAE,SAAoB,EAAE,SAAiB;QAC7D,MAAM,GAAG,GAAG,YAAY,CAAC,4BAA4B,SAAS,GAAG,CAAC,CAAA;QAElE,SAAS,CAAC,YAAY,CAAC,UAAU,CAAC;YAChC,IAAI,EAAE,cAAc;YACpB,MAAM,EAAE,KAAK,EAAE,IAAY,EAAE,IAAwC,EAAE,EAAE;gBACvE,IAAI,CAAC;oBACH,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,CAAA;oBAEjC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;wBAC/B,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAA;oBACpD,CAAC;oBAED,MAAM,CAAC,QAAQ,CAAA;gBACjB,CAAC;gBAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACX,IAAI,GAAG,GAAG,CAAC,CAAA;oBACX,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,CAAC,CAAC,CAAC;wBACpC,GAAG,GAAG,IAAI,KAAK,CAAC,qBAAqB,GAAG,CAAC,CAAC,CAAA;oBAC5C,CAAC;oBAED,GAAG,CAAC,KAAK,CAAC,qEAAqE,EAAE,GAAG,CAAC,YAAY,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;oBAE/H,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,GAAG,CAAC,CAAA;gBAC3D,CAAC;YACH,CAAC;SACF,CAAC,CAAA;QAEF,SAAS,CAAC,aAAa,CAAC,UAAU,CAAC;YACjC,IAAI,EAAE,cAAc;YACpB,MAAM,EAAE,KAAK,EAAE,MAAc,EAAE,IAAsC,EAAE,EAAE;gBACvE,IAAI,CAAC;oBACH,MAAM,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,CAAA;gBAC3B,CAAC;gBAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACX,IAAI,GAAG,GAAG,CAAC,CAAA;oBACX,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,CAAC,CAAC,CAAC;wBACpC,GAAG,GAAG,IAAI,KAAK,CAAC,2BAA2B,GAAG,CAAC,CAAC,CAAA;oBAClD,CAAC;oBAED,GAAG,CAAC,KAAK,CAAC,kCAAkC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;oBAE1E,MAAM,GAAG,CAAA;gBACX,CAAC;YACH,CAAC;SACF,CAAC,CAAA;IACJ,CAAC;CACF;AApDD,yCAoDC","sourcesContent":["import { create as createLogger } from '../common/log'\nimport { Middleware, MiddlewareCallback, MiddlewareServices, Pipelines } from '../types/middleware'\nimport * as IlpPacket from 'ilp-packet'\n\nexport default class ErrorHandlerMiddleware implements Middleware {\n  private getOwnAddress: () => string\n\n  constructor (opts: {}, api: MiddlewareServices) {\n    this.getOwnAddress = api.getOwnAddress\n  }\n\n  async applyToPipelines (pipelines: Pipelines, accountId: string) {\n    const log = createLogger(`error-handler-middleware[${accountId}]`)\n\n    pipelines.incomingData.insertLast({\n      name: 'errorHandler',\n      method: async (data: Buffer, next: MiddlewareCallback<Buffer, Buffer>) => {\n        try {\n          const response = await next(data)\n\n          if (!Buffer.isBuffer(response)) {\n            throw new Error('handler did not return a value.')\n          }\n\n          return response\n        } catch (e) {\n          let err = e\n          if (!err || typeof err !== 'object') {\n            err = new Error('Non-object thrown: ' + e)\n          }\n\n          log.debug('error in data handler, creating rejection. ilpErrorCode=%s error=%s', err.ilpErrorCode, err.stack ? err.stack : err)\n\n          return IlpPacket.errorToReject(this.getOwnAddress(), err)\n        }\n      }\n    })\n\n    pipelines.incomingMoney.insertLast({\n      name: 'errorHandler',\n      method: async (amount: string, next: MiddlewareCallback<string, void>) => {\n        try {\n          return await next(amount)\n        } catch (e) {\n          let err = e\n          if (!err || typeof err !== 'object') {\n            err = new Error('non-object thrown. value=' + e)\n          }\n\n          log.debug('error in money handler. error=%s', err.stack ? err.stack : err)\n\n          throw err\n        }\n      }\n    })\n  }\n}\n"]}