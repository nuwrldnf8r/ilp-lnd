{"version":3,"file":"ecb-plus-coinmarketcap.js","sourceRoot":"","sources":["ecb-plus-coinmarketcap.ts"],"names":[],"mappings":";;AACA,2CAA8B;AAC9B,+BAA8B;AAC9B,mCAAkC;AAElC,MAAM,iBAAiB,GAAG,0CAA0C,CAAA;AACpE,MAAM,eAAe,GAAG,SAAS,CAAA;AAEjC,gCAAgD,SAAQ,aAAU;IAChE,KAAK,CAAC,OAAO;QACX,MAAM,KAAK,CAAC,OAAO,EAAE,CAAA;QACrB,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;QACtD,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAA;QAClC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAA;QAC9D,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAA;IACxB,CAAC;IAEO,KAAK,CAAC,WAAW,CAAE,OAAe;QACxC,MAAM,OAAO,GAAG,MAAM,oBAAK,CAAC,iBAAiB,CAAC,CAAA;QAC9C,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC;YAC3B,MAAM,IAAI,KAAK,CAAC,4CAA4C,GAAG,OAAO,CAAC,MAAM,CAAC,CAAA;QAChF,CAAC;QACD,MAAM,IAAI,GAAG,MAAM,OAAO,CAAC,IAAI,EAAE,CAAA;QACjC,MAAM,CAAC,kBAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,QAAa,EAAE,EAAE;YAC1C,MAAM,CAAC,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,CAAC,QAAQ,CAAC,SAAS,GAAG,OAAO,CAAC,CAAC,GAAG,eAAe,CAAC,CAAA;QAC1G,CAAC,CAAC,CAAC,CAAA;IACL,CAAC;CACF;AAnBD,6CAmBC","sourcesContent":["\nimport fetch from 'node-fetch'\nimport ECBBackend from './ecb'\nimport { fromPairs } from 'lodash'\n\nconst COINMARKETCAP_API = 'https://api.coinmarketcap.com/v1/ticker/'\nconst ROUNDING_FACTOR = 100000000\n\nexport default class ECBAndCoinMarketCapBackend extends ECBBackend {\n  async connect () {\n    await super.connect()\n    const ccRates = await this._getCCRates(this.rates.USD)\n    Object.assign(this.rates, ccRates)\n    this.currencies = this.currencies.concat(Object.keys(ccRates))\n    this.currencies.sort()\n  }\n\n  private async _getCCRates (usdRate: number) {\n    const rateRes = await fetch(COINMARKETCAP_API)\n    if (rateRes.status !== 200) {\n      throw new Error('Unexpected status from coinmarketcap.com: ' + rateRes.status)\n    }\n    const body = await rateRes.json()\n    return fromPairs(body.map((rateInfo: any) => {\n      return [rateInfo.symbol, Math.floor(ROUNDING_FACTOR / (rateInfo.price_usd * usdRate)) / ROUNDING_FACTOR]\n    }))\n  }\n}\n"]}