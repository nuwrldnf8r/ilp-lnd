import Accounts from './accounts';
import LiquidityCurve from '../routing/liquidity-curve';
import PrefixMap from '../routing/prefix-map';
import reduct = require('reduct');
export interface CachedCurve {
    prefix: string;
    curve: LiquidityCurve;
    expiry: number;
    minMessageWindow: number;
}
export default class Quoter {
    protected accounts: Accounts;
    protected quoteExpiryDuration: number;
    protected cache: PrefixMap<CachedCurve>;
    constructor(deps: reduct.Injector);
    quoteLiquidity(nextHop: string, destinationAccount: string): Promise<CachedCurve | {
        curve: LiquidityCurve;
        prefix: string;
        expiry: Date;
        minMessageWindow: number;
    }>;
    cacheCurve({prefix, curve, expiry, minMessageWindow}: CachedCurve): void;
}
