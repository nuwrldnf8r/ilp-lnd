{"version":3,"file":"admin-api.js","sourceRoot":"","sources":["admin-api.ts"],"names":[],"mappings":"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","sourcesContent":["import reduct = require('reduct')\nimport Ajv = require('ajv')\nimport { mapValues as pluck } from 'lodash'\nimport Accounts from './accounts'\nimport Config from './config'\nimport MiddlewareManager from './middleware-manager'\nimport BalanceMiddleware from '../middlewares/balance'\nimport AlertMiddleware from '../middlewares/alert'\nimport RoutingTable from './routing-table'\nimport RouteBroadcaster from './route-broadcaster'\nimport Stats from './stats'\nimport RateBackend from './rate-backend'\nimport { formatRoutingTableAsJson } from '../routing/utils'\nimport { Server, ServerRequest, ServerResponse } from 'http'\nimport InvalidJsonBodyError from '../errors/invalid-json-body-error'\nimport { BalanceUpdate } from '../schemas/BalanceUpdate'\n\nimport { create as createLogger } from '../common/log'\nconst log = createLogger('admin-api')\nconst ajv = new Ajv()\nconst validateBalanceUpdate = ajv.compile(require('../schemas/BalanceUpdate.json'))\n\ninterface Route {\n  method: 'GET' | 'POST' | 'DELETE'\n  match: string\n  fn: (url: string, body: object) => Promise<object | void>\n}\n\nexport default class AdminApi {\n  private accounts: Accounts\n  private config: Config\n  private middlewareManager: MiddlewareManager\n  private routingTable: RoutingTable\n  private routeBroadcaster: RouteBroadcaster\n  private rateBackend: RateBackend\n  private stats: Stats\n\n  private server?: Server\n  private routes: Route[]\n\n  constructor (deps: reduct.Injector) {\n    this.accounts = deps(Accounts)\n    this.config = deps(Config)\n    this.middlewareManager = deps(MiddlewareManager)\n    this.routingTable = deps(RoutingTable)\n    this.routeBroadcaster = deps(RouteBroadcaster)\n    this.rateBackend = deps(RateBackend)\n    this.stats = deps(Stats)\n\n    this.routes = [\n      { method: 'GET', match: '/status$', fn: this.getStatus },\n      { method: 'GET', match: '/routing$', fn: this.getRoutingStatus },\n      { method: 'GET', match: '/accounts$', fn: this.getAccountStatus },\n      { method: 'GET', match: '/balance$', fn: this.getBalanceStatus },\n      { method: 'POST', match: '/balance$', fn: this.postBalance },\n      { method: 'GET', match: '/rates$', fn: this.getBackendStatus },\n      { method: 'GET', match: '/stats$', fn: this.getStats },\n      { method: 'GET', match: '/alerts$', fn: this.getAlerts },\n      { method: 'DELETE', match: '/alerts/', fn: this.deleteAlert }\n    ]\n  }\n\n  listen () {\n    const {\n      adminApi = false,\n      adminApiHost = '127.0.0.1',\n      adminApiPort = 7780\n    } = this.config\n\n    log.info('listen called')\n\n    if (adminApi) {\n      log.info('admin api listening. host=%s port=%s', adminApiHost, adminApiPort)\n      this.server = new Server()\n      this.server.listen(adminApiPort, adminApiHost)\n      this.server.on('request', (req, res) => {\n        this.handleRequest(req, res).catch((e) => {\n          let err = e\n          if (!e || typeof e !== 'object') {\n            err = new Error('non-object thrown. error=' + e)\n          }\n\n          log.warn('error in admin api request handler. error=%s', err.stack ? err.stack : err)\n          res.statusCode = e.httpErrorCode || 500\n          res.setHeader('Content-Type', 'text/plain')\n          res.end(String(err))\n        })\n      })\n    }\n  }\n\n  private async handleRequest (req: ServerRequest, res: ServerResponse) {\n    req.setEncoding('utf8')\n    let body = ''\n    await new Promise((resolve, reject) => {\n      req.on('data', data => body += data)\n      req.once('end', resolve)\n      req.once('error', reject)\n    })\n\n    const urlPrefix = (req.url || '').split('?')[0] + '$'\n    const route = this.routes.find((route) =>\n      route.method === req.method && urlPrefix.startsWith(route.match))\n    if (!route) {\n      res.statusCode = 404\n      res.setHeader('Content-Type', 'text/plain')\n      res.end('Not Found')\n      return\n    }\n\n    const resBody = await route.fn.call(this, req.url, body && JSON.parse(body))\n    if (resBody) {\n      res.statusCode = 200\n      res.setHeader('Content-Type', 'application/json')\n      res.end(JSON.stringify(resBody))\n    } else {\n      res.statusCode = 204\n      res.end()\n    }\n  }\n\n  private async getStatus () {\n    const balanceStatus = await this.getBalanceStatus()\n    const accountStatus = await this.getAccountStatus()\n    return {\n      balances: pluck(balanceStatus['accounts'], 'balance'),\n      connected: pluck(accountStatus['accounts'], 'connected'),\n      localRoutingTable: formatRoutingTableAsJson(this.routingTable)\n    }\n  }\n\n  private async getRoutingStatus () {\n    return this.routeBroadcaster.getStatus()\n  }\n\n  private async getAccountStatus () {\n    return this.accounts.getStatus()\n  }\n\n  private async getBalanceStatus () {\n    const middleware = this.middlewareManager.getMiddleware('balance')\n    if (!middleware) return {}\n    const balanceMiddleware = middleware as BalanceMiddleware\n    return balanceMiddleware.getStatus()\n  }\n\n  private async postBalance (url: string, _data: object) {\n    try {\n      validateBalanceUpdate(_data)\n    } catch (err) {\n      const firstError = (validateBalanceUpdate.errors &&\n        validateBalanceUpdate.errors[0]) ||\n        { message: 'unknown validation error', dataPath: '' }\n      throw new InvalidJsonBodyError('invalid balance update: error=' + firstError.message + ' dataPath=' + firstError.dataPath, validateBalanceUpdate.errors || [])\n    }\n\n    const data = _data as BalanceUpdate\n    const middleware = this.middlewareManager.getMiddleware('balance')\n    if (!middleware) return\n    const balanceMiddleware = middleware as BalanceMiddleware\n    balanceMiddleware.modifyBalance(data.accountId, data.amountDiff)\n  }\n\n  private getBackendStatus (): Promise<{ [s: string]: any }> {\n    return this.rateBackend.getStatus()\n  }\n\n  private async getStats () {\n    return this.stats.getStatus()\n  }\n\n  private async getAlerts () {\n    const middleware = this.middlewareManager.getMiddleware('alert')\n    if (!middleware) return {}\n    const alertMiddleware = middleware as AlertMiddleware\n    return {\n      alerts: alertMiddleware.getAlerts()\n    }\n  }\n\n  private async deleteAlert (url: string, _: object) {\n    const middleware = this.middlewareManager.getMiddleware('alert')\n    if (!middleware) return {}\n    const alertMiddleware = middleware as AlertMiddleware\n    const match = /^\\/alerts\\/(\\d+)$/.exec(url.split('?')[0])\n    if (!match) throw new Error('invalid alert id')\n    alertMiddleware.dismissAlert(+match[1])\n  }\n}\n"]}