import Accounts from '../services/accounts';
import { BroadcastRoute } from '../types/routing';
import reduct = require('reduct');
import CcpSender from './ccp-sender';
import CcpReceiver from './ccp-receiver';
export interface BroadcastRoutesParams {
    accounts: Accounts;
    newRoutes: BroadcastRoute[];
    routingTableId: string;
    holdDownTime: number;
    withdrawnRoutes: {
        prefix: string;
        epoch: number;
    }[];
    fromEpoch: number;
    toEpoch: number;
    timeout: number;
}
export interface PeerOpts {
    deps: reduct.Injector;
    accountId: string;
    sendRoutes: boolean;
    receiveRoutes: boolean;
}
export default class Peer {
    private config;
    private accounts;
    private accountId;
    private ccpSender?;
    private ccpReceiver?;
    constructor({deps, accountId, sendRoutes, receiveRoutes}: PeerOpts);
    getAccountId(): string;
    getReceiver(): CcpReceiver | undefined;
    getSender(): CcpSender | undefined;
    private getAccountRelation;
}
