{"version":3,"file":"logger.js","sourceRoot":"","sources":["../../src/logger.ts"],"names":[],"mappings":"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","sourcesContent":["import { LogLevel } from './interfaces/log-entry'\nimport { getCallsite } from './blackmagic'\nimport { LoggerConfig, LineinfoSetting } from './interfaces/logger-config'\nimport { LogMethod } from './interfaces/log-method'\nimport { getEnvConfig } from './config'\nimport createFormatter from './formatters/standard'\n\nlet nextNamespaceId = 0\n\nexport class Logger {\n  debug: LogMethod\n  info: LogMethod\n  warn: LogMethod\n  error: LogMethod\n\n  private stream: NodeJS.WritableStream\n  private format: (format: any, ...param: any[]) => string\n\n  constructor (namespace: string, config0?: LoggerConfig) {\n    const config = Object.assign({}, getEnvConfig(), config0)\n\n    this.stream = config.stream\n    this.format = config.format\n\n    const formatter = createFormatter(config)\n\n    const namespaceId = nextNamespaceId++\n\n    const debug = require('debug')\n    const debugLog = debug(namespace)\n    const shouldGetCallsite = config.lineInfo !== LineinfoSetting.None\n\n    debugLog.riverpigNamespaceId = namespaceId\n\n    debug.log = this.write.bind(this)\n    debug.formatArgs = function (message: string, ...elements: any[]) {\n      const callsite = shouldGetCallsite ? getCallsite(this) : undefined\n\n      if (typeof this.riverpigNamespaceId === 'undefined') {\n        this.riverpigNamespaceId = nextNamespaceId++\n      }\n\n      if (Array.isArray(message)) {\n        // debug module versions >= 2.4.0\n        message.splice(0, message.length, formatter({\n          message: message[0] as string,\n          callsite,\n          namespace: this.namespace,\n          namespaceId: this.riverpigNamespaceId,\n          level: 'debug',\n          timestamp: new Date(),\n          arguments: (message as Array<any>).slice(1)\n        }))\n        return\n      } else {\n        // debug module versions <= 2.3.3\n        return [formatter({\n          message,\n          callsite,\n          namespace: this.namespace,\n          namespaceId: this.riverpigNamespaceId,\n          level: 'debug',\n          timestamp: new Date(),\n          arguments: elements\n        })]\n      }\n    }\n\n    const createLogFunction = (\n      level: LogLevel,\n      namespace: string,\n      namespaceId: number\n    ) => {\n      const logFn = (message: any, ...elements: any[]) => {\n        const callsite = shouldGetCallsite ? getCallsite(logFn) : undefined\n        this.write(formatter({\n          message,\n          callsite,\n          namespace,\n          namespaceId,\n          level,\n          timestamp: new Date(),\n          arguments: elements\n        }))\n      }\n\n      return logFn\n    }\n\n    this.debug = debugLog\n    this.info = createLogFunction('info', namespace, namespaceId)\n    this.warn = createLogFunction('warn', namespace, namespaceId)\n    this.error = createLogFunction('error', namespace, namespaceId)\n  }\n\n  setOutputStream (stream: NodeJS.WritableStream) {\n    this.stream = stream\n  }\n\n  setStringFormatter (format: (message: string, ...elements: any[]) => string) {\n    this.format = format\n  }\n\n  private write (...args: any[]) {\n    this.stream.write(`${this.format.apply(null, args)}\\n`)\n  }\n}\n"]}