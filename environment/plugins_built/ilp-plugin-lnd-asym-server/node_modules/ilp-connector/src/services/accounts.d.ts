/// <reference types="node" />
import reduct = require('reduct');
import Store from '../services/store';
import Config from './config';
import { EventEmitter } from 'events';
import { AccountInfo } from '../types/accounts';
import { ConnectOptions, PluginInstance } from '../types/plugin';
export interface AccountEntry {
    plugin: PluginInstance;
    info: AccountInfo;
}
export default class Accounts extends EventEmitter {
    protected config: Config;
    protected store: Store;
    protected address: string;
    protected accounts: Map<string, AccountEntry>;
    constructor(deps: reduct.Injector);
    loadIlpAddress(): Promise<void>;
    connect(options: ConnectOptions): Promise<void[]>;
    disconnect(): Promise<void[]>;
    getOwnAddress(): string;
    setOwnAddress(newAddress: any): void;
    getPlugin(accountId: string): PluginInstance;
    exists(accountId: string): boolean;
    getAccountIds(): string[];
    getAssetCode(accountId: string): string | undefined;
    add(accountId: string, creds: any): void;
    remove(accountId: string): PluginInstance | undefined;
    getInfo(accountId: string): AccountInfo;
    getChildAddress(accountId: string): string;
    getStatus(): {
        address: string;
        accounts: {};
    };
}
