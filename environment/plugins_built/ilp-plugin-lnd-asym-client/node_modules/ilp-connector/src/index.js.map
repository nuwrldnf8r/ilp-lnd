{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;;AAEA,OAAO,CAAC,oBAAoB,CAAC,CAAC,OAAO,EAAE,CAAA;AAEvC,+BAA6B;AAC7B,sCAAqD;AACrD,MAAM,GAAG,GAAG,YAAY,CAAC,KAAK,CAAC,CAAA;AAE/B,MAAM,CAAC,OAAO,GAAG;IACf,SAAS,EAAE,aAAS;CACrB,CAAA;AAED,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;IACnB,MAAM,SAAS,GAAG,aAAS,EAAE,CAAA;IAC7B,SAAS,CAAC,MAAM,EAAE;SACf,KAAK,CAAC,CAAC,GAAQ,EAAE,EAAE;QAClB,MAAM,OAAO,GAAG,CAAC,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAA;QAC/E,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA;IACpB,CAAC,CAAC,CAAA;IAEJ,IAAI,YAAY,GAAG,KAAK,CAAA;IACxB,OAAO,CAAC,EAAE,CAAC,QAAQ,EAAE,KAAK,IAAI,EAAE;QAC9B,IAAI,CAAC;YACH,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;gBACjB,GAAG,CAAC,IAAI,CAAC,sEAAsE,CAAC,CAAA;gBAChF,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;gBACf,MAAM,CAAA;YACR,CAAC;YAED,YAAY,GAAG,IAAI,CAAA;YAGnB,GAAG,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAA;YAC3B,MAAM,SAAS,CAAC,QAAQ,EAAE,CAAA;YAC1B,GAAG,CAAC,KAAK,CAAC,8BAA8B,CAAC,CAAA;YACzC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;QACjB,CAAC;QAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACb,MAAM,OAAO,GAAG,CAAC,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAA;YAC/E,OAAO,CAAC,KAAK,CAAC,qCAAqC,EAAE,OAAO,CAAC,CAAA;YAC7D,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;QACjB,CAAC;IACH,CAAC,CAAC,CAAA;AACJ,CAAC","sourcesContent":["#!/usr/bin/env node\n\nrequire('source-map-support').install()\n\nimport createApp from './app'\nimport { create as createLogger } from './common/log'\nconst log = createLogger('app')\n\nmodule.exports = {\n  createApp: createApp\n}\n\nif (!module.parent) {\n  const connector = createApp()\n  connector.listen()\n    .catch((err: any) => {\n      const errInfo = (err && typeof err === 'object' && err.stack) ? err.stack : err\n      log.error(errInfo)\n    })\n\n  let shuttingDown = false\n  process.on('SIGINT', async () => {\n    try {\n      if (shuttingDown) {\n        log.warn('received second SIGINT during graceful shutdown, exiting forcefully.')\n        process.exit(1)\n        return\n      }\n\n      shuttingDown = true\n\n      // Graceful shutdown\n      log.debug('shutting down.')\n      await connector.shutdown()\n      log.debug('completed graceful shutdown.')\n      process.exit(0)\n    } catch (err) {\n      const errInfo = (err && typeof err === 'object' && err.stack) ? err.stack : err\n      console.error('error while shutting down. error=%s', errInfo)\n      process.exit(1)\n    }\n  })\n}\n"]}