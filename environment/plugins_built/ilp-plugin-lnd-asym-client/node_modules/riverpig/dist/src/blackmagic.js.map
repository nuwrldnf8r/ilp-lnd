{"version":3,"file":"blackmagic.js","sourceRoot":"","sources":["../../src/blackmagic.ts"],"names":[],"mappings":";;AAEA,qBAA6B,aAAuB;IAClD,MAAM,QAAQ,GAAG,KAAK,CAAC,eAAe,CAAA;IACtC,KAAK,CAAC,eAAe,GAAG,CAAC,CAAA;IAEzB,MAAM,SAAS,GAAG,KAAK,CAAC,iBAAiB,CAAA;IACzC,KAAK,CAAC,iBAAiB,GAAG,CAAC,KAAU,EAAE,KAAU,EAAE,EAAE,CAAC,KAAK,CAAA;IAE3D,MAAM,KAAK,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,CAAA;IAC3B,KAAK,CAAC,iBAAiB,CAAC,KAAK,EAAE,aAAa,IAAI,WAAW,CAAC,CAAA;IAC5D,MAAM,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;IAEpD,KAAK,CAAC,iBAAiB,GAAG,SAAS,CAAA;IACnC,KAAK,CAAC,eAAe,GAAG,QAAQ,CAAA;IAEhC,OAAO,QAAQ,CAAA;AACjB,CAAC;AAfD,kCAeC","sourcesContent":["import { CallSite } from './interfaces/call-site'\n\nexport function getCallsite (belowFunction: Function): CallSite {\n  const oldLimit = Error.stackTraceLimit\n  Error.stackTraceLimit = 1\n\n  const v8Handler = Error.prepareStackTrace\n  Error.prepareStackTrace = (dummy: any, stack: any) => stack\n\n  const dummy = { stack: [] }\n  Error.captureStackTrace(dummy, belowFunction || getCallsite)\n  const callsite = dummy.stack[dummy.stack.length - 1]\n\n  Error.prepareStackTrace = v8Handler\n  Error.stackTraceLimit = oldLimit\n\n  return callsite\n}\n"]}